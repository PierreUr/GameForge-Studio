{
    "architecture": "Entity-Component-System",
    "modules": {
        "Authentication_Module": {
            "status": "pending",
            "components": [
                "007-db-schema-benutzer-rollen",
                "008-registrierung-login-api",
                "011-frontend-auth-logik"
            ],
            "dependencies": [],
            "team": "Backend"
        },
        "Authorization_Module": {
            "status": "pending",
            "components": [
                "009-rollen-management-api",
                "010-api-berechtigungspruefung-guards",
                "012-admin-ui-benutzer-rollenverwaltung"
            ],
            "dependencies": [
                "Authentication_Module"
            ],
            "team": "Backend"
        },
        "Logic_Graph_Module": {
            "status": "pending",
            "components": [
                "107-graph-node-editor-ui-grundstruktur-erstellen",
                "108-graph-node-basisklasse-inputs-outputs-implementieren",
                "109-graph-connection-klasse-source-target-implementieren",
                "110-graph-graph-datenstruktur-nodes-edges-implementieren",
                "111-graph-drag-to-connect-interaktion-implementieren",
                "112-graph-node-library-events-actions-erstellen",
                "113-graph-oncollisionevent-node-implementieren",
                "114-graph-onkeypressevent-node-implementieren",
                "115-graph-modifyhealthaction-node-implementieren",
                "116-graph-createentityaction-node-implementieren",
                "117-graph-destroyentityaction-node-implementieren",
                "118-graph-graph-zu-json-serialisierung-implementieren",
                "119-graph-json-zu-graph-deserialisierung-implementieren",
                "120-graph-graph-compiler-validierung-implementieren",
                "121-graph-graph-interpreter-runtime-implementieren",
                "122-graph-event-trigger-zu-graph-execution-mapping",
                "123-graph-node-execution-context-entity-scope-implementieren",
                "124-graph-variable-nodes-get-set-component-implementieren",
                "125-graph-conditional-nodes-if-else-implementieren",
                "126-graph-math-nodes-add-multiply-etc-implementieren",
                "161-graph-interaktive-node-library-implementieren"
            ],
            "dependencies": [
                "ECS_Core_Engine_Module"
            ],
            "team": "Logic"
        },
        "Rendering_Module": {
            "status": "pending",
            "components": [
                "092-rendering-pixi-js-application-initialisieren",
                "093-rendering-canvas-groesse-dynamisch-anpassen",
                "094-rendering-sprite-loader-system-implementieren",
                "095-rendering-texture-cache-implementieren",
                "096-rendering-entity-zu-pixi-sprite-mapping-erstellen",
                "097-rendering-rendersystem-update-loop-implementieren",
                "098-rendering-position-component-zu-sprite-position-sync",
                "099-rendering-sprite-component-zu-pixi-texture-sync",
                "100-rendering-layer-system-z-index-implementieren",
                "101-rendering-camera-transform-pan-zoom-implementieren",
                "102-rendering-grid-overlay-fuer-editor-modus-implementieren",
                "103-rendering-entity-highlight-bei-selektion-implementieren",
                "104-rendering-debug-rendering-collider-boxen-implementieren",
                "105-rendering-performance-optimierung-culling-implementieren",
                "106-rendering-resize-handler-fuer-responsive-canvas"
            ],
            "dependencies": [
                "ECS_Core_Engine_Module"
            ],
            "team": "Graphics"
        },
        "Core_Function_Library_Module": {
            "status": "pending",
            "components": [
                "032-library-component-basisklasse-mit-isactive-erstellen",
                "033-library-system-basisklasse-mit-update-template-erstellen",
                "034-library-positioncomponent-x-y-z-implementieren",
                "035-library-velocitycomponent-x-y-implementieren",
                "036-library-spritecomponent-texture-width-height-implementieren",
                "037-library-healthcomponent-max-current-implementieren",
                "038-library-playerinputcomponent-keybindings-implementieren",
                "039-library-physicsbodycomponent-mass-friction-implementieren",
                "040-library-collidercomponent-shape-size-implementieren",
                "041-library-scorecomponent-points-implementieren",
                "042-library-aipatrolcomponent-waypoints-speed-implementieren",
                "043-library-movementsystem-implementieren",
                "044-library-physicssystem-mit-kollisionserkennung-implementieren",
                "045-library-healthsystem-regeneration-tod-implementieren",
                "046-library-playerinputsystem-tastatur-handler-implementieren",
                "047-library-aipatrolsystem-implementieren",
                "048-library-scoringsystem-implementieren",
                "049-library-renderingsystem-schnittstelle-implementieren",
                "050-library-component-manifest-json-fuer-editor-erstellen",
                "051-library-template-system-fuer-vordefinierte-entities-erstellen",
                "052-library-playertemplate-health-input-sprite-erstellen",
                "053-library-enemytemplate-health-ai-sprite-erstellen",
                "054-library-obstacletemplate-physicsbody-collider-erstellen",
                "055-library-pickuptemplate-collider-score-erstellen",
                "056-library-component-validierung-schema-implementieren"
            ],
            "dependencies": [
                "ECS_Core_Engine_Module"
            ],
            "team": "Gameplay"
        },
        "ECS_Core_Engine_Module": {
            "status": "pending",
            "components": [
                "001-ecs-core-entitymanager-basisklasse-implementieren",
                "002-ecs-core-entity-id-generator-mit-auto-increment-erstellen",
                "003-ecs-core-entity-set-fuer-aktive-entities-verwalten",
                "004-ecs-core-createentity-methode-implementieren",
                "005-ecs-core-destroyentity-methode-mit-cleanup-implementieren",
                "006-ecs-core-componentmanager-basisklasse-implementieren",
                "007-ecs-core-componentstores-map-datenstruktur-erstellen",
                "008-ecs-core-addcomponent-methode-implementieren",
                "009-ecs-core-getcomponent-methode-implementieren",
                "010-ecs-core-removecomponent-methode-implementieren",
                "011-ecs-core-getentitieswithcomponents-query-system-implementieren",
                "012-ecs-core-component-isactive-flag-unterstuetzung-implementieren",
                "013-ecs-core-togglecomponent-methode-implementieren",
                "014-ecs-core-systemmanager-basisklasse-implementieren",
                "015-ecs-core-system-registry-mit-priority-queue-erstellen",
                "016-ecs-core-registersystem-methode-mit-prioritaet-implementieren",
                "017-ecs-core-unregistersystem-methode-implementieren",
                "018-ecs-core-togglesystem-fuer-globales-pausieren-implementieren",
                "019-ecs-core-gameloop-requestanimationframe-integration-implementieren",
                "020-ecs-core-deltatime-berechnung-fuer-gameloop-implementieren",
                "021-ecs-core-system-update-aufruf-mechanismus-implementieren",
                "022-ecs-core-gameloop-start-methode-implementieren",
                "023-ecs-core-gameloop-stop-methode-implementieren",
                "024-ecs-core-eventbus-singleton-klasse-implementieren",
                "025-ecs-core-eventbus-listeners-map-struktur-erstellen",
                "026-ecs-core-eventbus-subscribe-methode-implementieren",
                "027-ecs-core-eventbus-unsubscribe-methode-implementieren",
                "028-ecs-core-eventbus-publish-sync-dispatcher-implementieren",
                "029-ecs-core-eventbus-publishasync-async-dispatcher-implementieren",
                "030-ecs-core-projekt-serialisierung-getprojectstate-implementieren",
                "031-ecs-core-projekt-deserialisierung-loadprojectstate-implementieren"
            ],
            "dependencies": [],
            "team": "Engine"
        },
        "UI_Editor_Module": {
            "status": "pending",
            "components": [
                "057-editor-ui-css-grid-hauptlayout-3-spalten-implementieren",
                "058-editor-ui-resizable-split-pane-komponente-erstellen",
                "059-editor-ui-linke-sidebar-bibliothek-ebenen-struktur-erstellen",
                "060-editor-ui-rechte-sidebar-inspektor-struktur-erstellen",
                "061-editor-ui-canvas-container-in-mittelspalte-implementieren",
                "062-editor-ui-tab-system-fuer-sidebars-implementieren",
                "063-editor-ui-bibliothek-panel-komponente-erstellen",
                "064-editor-ui-component-manifest-laden-und-parsen",
                "065-editor-ui-component-card-ui-element-erstellen",
                "066-editor-ui-component-card-icon-und-beschreibung-rendern",
                "067-editor-ui-draggable-attribut-fuer-library-items-setzen",
                "068-editor-ui-dragstart-event-handler-implementieren",
                "069-editor-ui-datatransfer-template-name-speichern",
                "070-editor-ui-canvas-dragover-event-handler-implementieren",
                "071-editor-ui-canvas-drop-event-handler-implementieren",
                "072-editor-ui-drop-koordinaten-canvas-lokal-umrechnen",
                "073-editor-ui-engine-createentityfromtemplate-integration",
                "074-editor-ui-entity-selektion-click-handler-implementieren",
                "075-editor-ui-engine-selectentity-api-aufruf-implementieren",
                "076-editor-ui-eventbus-entity-selected-subscription",
                "077-editor-ui-inspektor-panel-dynamisch-leeren-fuellen",
                "078-editor-ui-engine-getcomponents-daten-abrufen",
                "079-editor-ui-component-daten-zu-ui-feldern-mappen",
                "080-editor-ui-numberinput-komponente-erstellen",
                "081-editor-ui-textinput-komponente-erstellen",
                "082-editor-ui-booleancheckbox-komponente-erstellen",
                "083-editor-ui-colorpicker-komponente-erstellen",
                "084-editor-ui-input-onchange-handler-implementieren",
                "085-editor-ui-engine-updatecomponent-bei-aenderung-aufrufen",
                "086-editor-ui-toolbar-mit-projekt-aktionen-erstellen",
                "087-editor-ui-speichern-button-exportproject-implementieren",
                "088-editor-ui-laden-button-importproject-implementieren",
                "089-editor-ui-live-vorschau-button-implementieren",
                "090-editor-ui-layout-speichern-laden-funktion-implementieren",
                "091-editor-ui-tastatur-shortcuts-ctrl-s-delete-implementieren",
                "163-editor-ui-debug-id-tooltip-implementieren",
                "162-library-aenderung-nur-optische-komponenten",
                "165-editor-ui-logic-graph-in-haupt-panel-laden",
                "166-editor-ui-debug-icon-fuer-graph-canvas-hinzufuegen",
                "167-editor-ui-debug-icon-position-fix",
                "168-editor-ui-debug-icon-global-toggle-implementieren",
                "169-editor-ui-admin-panel-fuer-tests-implementieren",
                "170-editor-ui-canvas-sichtbarkeit-bugfix"
            ],
            "dependencies": [
                "ECS_Core_Engine_Module"
            ],
            "team": "Frontend"
        }
    },
    "projectName": "GameForge Studio",
    "version": "1.25.0",
    "completedTasks": [
        "001-ui-setup-progress-bar",
        "002-handbuch-initialisierung",
        "003-backend-framework-setup",
        "004-datenbank-setup-orm",
        "005-api-grundstruktur-rest-graphql",
        "006-konfigurations-management",
        "007-db-schema-benutzer-rollen",
        "008-registrierung-login-api",
        "009-rollen-management-api",
        "010-api-berechtigungspruefung-guards",
        "011-frontend-auth-logik",
        "163-editor-ui-debug-id-tooltip-implementieren",
        "161-graph-interaktive-node-library-implementieren",
        "162-library-aenderung-nur-optische-komponenten",
        "165-editor-ui-logic-graph-in-haupt-panel-laden",
        "166-editor-ui-debug-icon-fuer-graph-canvas-hinzufuegen",
        "167-editor-ui-debug-icon-position-fix",
        "168-editor-ui-debug-icon-global-toggle-implementieren",
        "170-editor-ui-canvas-sichtbarkeit-bugfix",
        "169-editor-ui-admin-panel-fuer-tests-implementieren",
        "102-rendering-grid-overlay-fuer-editor-modus-implementieren",
        "089-editor-ui-live-vorschau-button-implementieren",
        "editor-ui-device-preview-frame-implementieren",
        "editor-erweiterte-layout-speicherung-und-ui-feedback",
        "012-admin-ui-benutzer-rollenverwaltung",
        "013-db-schema-module",
        "014-modul-registry-api",
        "admin-ui-modulverwaltung",
        "016-api-fuer-modul-konfiguration",
        "017-db-schema-aufgaben-erweitert",
        "018-aufgaben-crud-api-erweitert",
        "172-refactor-task-management-into-atomic-widgets",
        "173-implement-ui-builder-phase-1-layout-system",
        "174-implement-ui-builder-phase-2-widget-library-and-inspector",
        "175-ui-builder-verbesserungen-phase-1-input-fix-layout-und-bibliotheks-organisation",
        "176-ui-builder-reordering-von-layout-sektionen-per-drag-and-drop"
    ]
}